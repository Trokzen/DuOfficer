// ui/algorithms/ActionExecutionEditorDialog.qml
import QtQuick 6.5
import QtQuick.Controls 6.5
import QtQuick.Layouts 6.5
import QtQuick.Dialogs 6.5

Popup {
    id: actionExecutionEditorDialog
    x: (parent.width - width) / 2
    y: (parent.height - height) / 2
    width: Math.min(parent.width * 0.8, 600) // 80% —à–∏—Ä–∏–Ω—ã –∏–ª–∏ –º–∞–∫—Å–∏–º—É–º 600
    height: Math.min(parent.height * 0.85, 500) // –£–≤–µ–ª–∏—á–µ–Ω–∞ –≤—ã—Å–æ—Ç–∞ –¥–ª—è –Ω–æ–≤—ã—Ö –ø–æ–ª–µ–π
    modal: true
    focus: true
    closePolicy: Popup.CloseOnEscape | Popup.CloseOnPressOutsideParent

    // --- –°–≤–æ–π—Å—Ç–≤–∞ ---
    property bool isEditMode: false // true - —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ, false - –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ
    property int executionId: -1 // ID execution'–∞, –∫ –∫–æ—Ç–æ—Ä–æ–º—É –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç –∏–ª–∏ –±—É–¥–µ—Ç –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∞—Ç—å action_execution
    property int currentActionExecutionId: -1 // ID —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º–æ–≥–æ action_execution (—Ç–æ–ª—å–∫–æ –≤ —Ä–µ–∂–∏–º–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)

    // --- –°–∏–≥–Ω–∞–ª—ã ---
    signal actionExecutionSaved() // –°–∏–≥–Ω–∞–ª –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± —É—Å–ø–µ—à–Ω–æ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏/–¥–æ–±–∞–≤–ª–µ–Ω–∏–∏

    // --- –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–º–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è–º–∏ ---
    property var startTimeCalendarConnection: undefined
    property var endTimeCalendarConnection: undefined

    background: Rectangle {
        color: "white"
        border.color: "lightgray"
        radius: 5
    }

    // --- –û—Å–Ω–æ–≤–Ω–æ–π —Å—Ç–æ–ª–±–µ—Ü –¥–ª—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –¥–∏–∞–ª–æ–≥–∞ ---
    ColumnLayout {
        anchors.fill: parent
        anchors.margins: 15
        spacing: 15

        Label {
            id: dialogTitleLabel
            text: actionExecutionEditorDialog.isEditMode ? "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ" : "–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ"
            font.pointSize: 14
            font.bold: true
        }

        ScrollView {
            Layout.fillWidth: true
            Layout.fillHeight: true
            clip: true

            GridLayout {
                id: formGridLayout
                columns: 2
                columnSpacing: 10
                rowSpacing: 15
                width: parent.width

                Label {
                    text: "–û–ø–∏—Å–∞–Ω–∏–µ:*"
                    Layout.alignment: Qt.AlignRight | Qt.AlignTop // –í—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ —Å–≤–µ—Ä—Ö—É
                }
                TextArea {
                    id: descriptionArea
                    Layout.fillWidth: true
                    Layout.fillHeight: true // –ó–∞–ø–æ–ª–Ω—è–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—É—é –≤—ã—Å–æ—Ç—É
                    placeholderText: "–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏—è..."
                    wrapMode: TextArea.Wrap
                }

                // --- –ù–û–í–û–ï: –í–≤–æ–¥ –∞–±—Å–æ–ª—é—Ç–Ω–æ–≥–æ —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞—á–∞–ª–∞ ---
                Label {
                    text: "–ù–∞—á–∞–ª–æ:*"
                    Layout.alignment: Qt.AlignRight
                    font.pixelSize: 11 // <-- –£–º–µ–Ω—å—à–µ–Ω–æ
                    MouseArea {
                        id: startTimeTipMA_start
                        anchors.fill: parent
                        hoverEnabled: true
                    }
                    ToolTip {
                        text: "–§–∞–∫—Ç–∏—á–µ—Å–∫–∞—è –∞–±—Å–æ–ª—é—Ç–Ω–∞—è –¥–∞—Ç–∞ –∏ –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏—è"
                        visible: startTimeTipMA_start.containsMouse
                        delay: 500 // <-- –î–æ–±–∞–≤–ª–µ–Ω–æ –¥–ª—è ToolTip
                    }
                }
                ColumnLayout {
                    Layout.fillWidth: true
                    spacing: 3 // <-- –£–º–µ–Ω—å—à–µ–Ω–æ

                    // --- –ü–û–õ–ï –î–õ–Ø –î–ê–¢–´ ---
                    RowLayout {
                        Layout.fillWidth: true
                        spacing: 3 // <-- –£–º–µ–Ω—å—à–µ–Ω–æ
                        TextField {
                            id: actualStartDateField
                            Layout.fillWidth: true
                            // Layout.preferredWidth: 80 // <-- –ú–æ–∂–Ω–æ –∑–∞–¥–∞—Ç—å —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—É—é —à–∏—Ä–∏–Ω—É, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
                            placeholderText: "–¥–¥.–ú–ú.–≥–≥–≥–≥"
                            font.pixelSize: 11 // <-- –£–º–µ–Ω—å—à–µ–Ω–æ
                            text: "" // –ë—É–¥–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –≤ resetForAdd/loadDataForEdit
                            selectByMouse: true
                            readOnly: true // –¢–æ–ª—å–∫–æ –¥–ª—è —á—Ç–µ–Ω–∏—è, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —Ä—É—á–Ω–æ–≥–æ –≤–≤–æ–¥–∞
                        }
                        Button {
                            id: actualStartDateCalendarButton
                            text: "üìÖ"
                            font.pixelSize: 12 // <-- –£–º–µ–Ω—å—à–µ–Ω–æ
                            Layout.preferredWidth: 30 // <-- –£–º–µ–Ω—å—à–µ–Ω–æ
                            Layout.preferredHeight: 25 // <-- –£–º–µ–Ω—å—à–µ–Ω–æ
                            onClicked: {
                                console.log("QML ActionExecutionEditorDialog: –ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ –∫–∞–ª–µ–Ω–¥–∞—Ä—è –¥–ª—è —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–æ–π –¥–∞—Ç—ã –Ω–∞—á–∞–ª–∞.");
                                // --- –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –ö–ê–õ–ï–ù–î–ê–†–Ø ---
                                var currentDateText = actualStartDateField.text.trim();
                                var dateRegex = /^(0[1-9]|[12][0-9]|3[01])\.(0[1-9]|1[012])\.\d{4}$/;
                                if (dateRegex.test(currentDateText)) {
                                    var parts = currentDateText.split('.');
                                    var day = parseInt(parts[0], 10);
                                    var month = parseInt(parts[1], 10) - 1;
                                    var year = parseInt(parts[2], 10);
                                    var testDate = new Date(year, month, day);
                                    if (testDate.getDate() === day && testDate.getMonth() === month && testDate.getFullYear() === year) {
                                        customCalendarPicker.selectedDate = testDate;
                                        console.log("QML ActionExecutionEditorDialog: CustomCalendarPicker –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –¥–∞—Ç–æ–π –∏–∑ –ø–æ–ª—è –Ω–∞—á–∞–ª–∞:", testDate);
                                    } else {
                                        customCalendarPicker.selectedDate = new Date();
                                        console.log("QML ActionExecutionEditorDialog: CustomCalendarPicker –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω —Ç–µ–∫—É—â–µ–π –¥–∞—Ç–æ–π (–Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –¥–∞—Ç–∞ –≤ –ø–æ–ª–µ –Ω–∞—á–∞–ª–∞).");
                                    }
                                } else {
                                    customCalendarPicker.selectedDate = new Date();
                                    console.log("QML ActionExecutionEditorDialog: CustomCalendarPicker –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω —Ç–µ–∫—É—â–µ–π –¥–∞—Ç–æ–π (–Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤ –ø–æ–ª–µ –Ω–∞—á–∞–ª–∞).");
                                }
                                // --- ---

                                // --- –ü–û–î–ö–õ–Æ–ß–ê–ï–ú –û–ë–†–ê–ë–û–¢–ß–ò–ö ---
                                if (typeof startTimeCalendarConnection !== 'undefined' && startTimeCalendarConnection) {
                                    startTimeCalendarConnection.destroy();
                                }
                                startTimeCalendarConnection = Qt.createQmlObject(`
                                    import QtQuick 6.5;
                                    Connections {
                                        target: customCalendarPicker;
                                        function onDateSelected(date) {
                                            console.log("QML ActionExecutionEditorDialog: CustomCalendarPicker (–ù–∞—á–∞–ª–æ): –î–∞—Ç–∞ –≤—ã–±—Ä–∞–Ω–∞:", date);
                                            var year = date.getFullYear();
                                            var month = String(date.getMonth() + 1).padStart(2, '0');
                                            var day = String(date.getDate()).padStart(2, '0');
                                            var formattedDate = day + "." + month + "." + year;
                                            actualStartDateField.text = formattedDate;
                                            console.log("QML ActionExecutionEditorDialog: CustomCalendarPicker (–ù–∞—á–∞–ª–æ): –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –Ω–æ–≤–∞—è –¥–∞—Ç–∞ –≤ –ø–æ–ª–µ –Ω–∞—á–∞–ª–∞:", formattedDate);
                                            if (typeof startTimeCalendarConnection !== 'undefined' && startTimeCalendarConnection) {
                                                startTimeCalendarConnection.destroy();
                                                startTimeCalendarConnection = undefined;
                                            }
                                        }
                                    }
                                `, actionExecutionEditorDialog, "startTimeCalendarConnectionDynamic");
                                // --- ---

                                customCalendarPicker.open();
                            }
                        }
                    }
                    // --- ---

                    // --- –ü–û–õ–ï –î–õ–Ø –í–†–ï–ú–ï–ù–ò ---
                    RowLayout {
                        Layout.fillWidth: true
                        spacing: 3 // <-- –£–º–µ–Ω—å—à–µ–Ω–æ
                        Label { text: "–í—Ä–µ–º—è:"; font.pixelSize: 11 } // <-- –£–º–µ–Ω—å—à–µ–Ω–æ
                        // –ü–æ–ª–µ –∏ –∫–Ω–æ–ø–∫–∏ –¥–ª—è —á–∞—Å–æ–≤
                        ColumnLayout {
                            spacing: 1 // <-- –£–º–µ–Ω—å—à–µ–Ω–æ
                            TextField {
                                id: actualStartTimeHoursField
                                Layout.preferredWidth: 40 // <-- –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —à–∏—Ä–∏–Ω–∞
                                placeholderText: "–ß–ß"
                                font.pixelSize: 11 // <-- –£–º–µ–Ω—å—à–µ–Ω–æ
                                text: "00"
                                validator: IntValidator { bottom: 0; top: 23 }
                                selectByMouse: true
                                horizontalAlignment: TextInput.AlignHCenter // –¶–µ–Ω—Ç—Ä–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç
                            }
                            RowLayout {
                                spacing: 1
                                Button {
                                    text: "‚ñ≤"
                                    font.pixelSize: 6 // <-- –£–º–µ–Ω—å—à–µ–Ω–æ
                                    Layout.preferredWidth: 12 // <-- –£–º–µ–Ω—å—à–µ–Ω–æ
                                    Layout.preferredHeight: 10 // <-- –£–º–µ–Ω—å—à–µ–Ω–æ
                                    onClicked: incrementTimeComponentSimple(actualStartTimeHoursField, 1);
                                }
                                Button {
                                    text: "‚ñº"
                                    font.pixelSize: 6 // <-- –£–º–µ–Ω—å—à–µ–Ω–æ
                                    Layout.preferredWidth: 12 // <-- –£–º–µ–Ω—å—à–µ–Ω–æ
                                    Layout.preferredHeight: 10 // <-- –£–º–µ–Ω—å—à–µ–Ω–æ
                                    onClicked: incrementTimeComponentSimple(actualStartTimeHoursField, -1);
                                }
                            }
                        }
                        Text { text: ":"; font.pixelSize: 11 } // <-- –£–º–µ–Ω—å—à–µ–Ω–æ
                        // –ü–æ–ª–µ –∏ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –º–∏–Ω—É—Ç
                        ColumnLayout {
                            spacing: 1 // <-- –£–º–µ–Ω—å—à–µ–Ω–æ
                            TextField {
                                id: actualStartTimeMinutesField
                                Layout.preferredWidth: 40 // <-- –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —à–∏—Ä–∏–Ω–∞
                                placeholderText: "–ú–ú"
                                font.pixelSize: 11 // <-- –£–º–µ–Ω—å—à–µ–Ω–æ
                                text: "00"
                                validator: IntValidator { bottom: 0; top: 59 }
                                selectByMouse: true
                                horizontalAlignment: TextInput.AlignHCenter
                            }
                            RowLayout {
                                spacing: 1
                                Button {
                                    text: "‚ñ≤"
                                    font.pixelSize: 6 // <-- –£–º–µ–Ω—å—à–µ–Ω–æ
                                    Layout.preferredWidth: 12 // <-- –£–º–µ–Ω—å—à–µ–Ω–æ
                                    Layout.preferredHeight: 10 // <-- –£–º–µ–Ω—å—à–µ–Ω–æ
                                    onClicked: incrementTimeComponentSimple(actualStartTimeMinutesField, 1);
                                }
                                Button {
                                    text: "‚ñº"
                                    font.pixelSize: 6 // <-- –£–º–µ–Ω—å—à–µ–Ω–æ
                                    Layout.preferredWidth: 12 // <-- –£–º–µ–Ω—å—à–µ–Ω–æ
                                    Layout.preferredHeight: 10 // <-- –£–º–µ–Ω—å—à–µ–Ω–æ
                                    onClicked: incrementTimeComponentSimple(actualStartTimeMinutesField, -1);
                                }
                            }
                        }
                        Text { text: ":"; font.pixelSize: 11 } // <-- –£–º–µ–Ω—å—à–µ–Ω–æ
                        // –ü–æ–ª–µ –∏ –∫–Ω–æ–ø–∫–∏ –¥–ª—è —Å–µ–∫—É–Ω–¥
                        ColumnLayout {
                            spacing: 1 // <-- –£–º–µ–Ω—å—à–µ–Ω–æ
                            TextField {
                                id: actualStartTimeSecondsField
                                Layout.preferredWidth: 40 // <-- –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —à–∏—Ä–∏–Ω–∞
                                placeholderText: "–°–°"
                                font.pixelSize: 11 // <-- –£–º–µ–Ω—å—à–µ–Ω–æ
                                text: "00"
                                validator: IntValidator { bottom: 0; top: 59 }
                                selectByMouse: true
                                horizontalAlignment: TextInput.AlignHCenter
                            }
                            RowLayout {
                                spacing: 1
                                Button {
                                    text: "‚ñ≤"
                                    font.pixelSize: 6 // <-- –£–º–µ–Ω—å—à–µ–Ω–æ
                                    Layout.preferredWidth: 12 // <-- –£–º–µ–Ω—å—à–µ–Ω–æ
                                    Layout.preferredHeight: 10 // <-- –£–º–µ–Ω—å—à–µ–Ω–æ
                                    onClicked: incrementTimeComponentSimple(actualStartTimeSecondsField, 1);
                                }
                                Button {
                                    text: "‚ñº"
                                    font.pixelSize: 6 // <-- –£–º–µ–Ω—å—à–µ–Ω–æ
                                    Layout.preferredWidth: 12 // <-- –£–º–µ–Ω—å—à–µ–Ω–æ
                                    Layout.preferredHeight: 10 // <-- –£–º–µ–Ω—å—à–µ–Ω–æ
                                    onClicked: incrementTimeComponentSimple(actualStartTimeSecondsField, -1);
                                }
                            }
                        }
                    }
                    // --- ---
                }
                // --- ---

                // --- –ù–û–í–û–ï: –í–≤–æ–¥ –∞–±—Å–æ–ª—é—Ç–Ω–æ–≥–æ —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –æ–∫–æ–Ω—á–∞–Ω–∏—è (–î–∞—Ç–∞ + –í—Ä–µ–º—è) ---
                Label {
                    text: "–û–∫–æ–Ω—á–∞–Ω–∏–µ:*"
                    Layout.alignment: Qt.AlignRight
                    font.pixelSize: 11 // <-- –£–º–µ–Ω—å—à–µ–Ω–æ
                    MouseArea {
                        id: endTimeTipMA_end
                        anchors.fill: parent
                        hoverEnabled: true
                    }
                    ToolTip {
                        text: "–§–∞–∫—Ç–∏—á–µ—Å–∫–∞—è –∞–±—Å–æ–ª—é—Ç–Ω–∞—è –¥–∞—Ç–∞ –∏ –≤—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏—è"
                        visible: endTimeTipMA_end.containsMouse
                        delay: 500 // <-- –î–æ–±–∞–≤–ª–µ–Ω–æ –¥–ª—è ToolTip
                    }
                }
                ColumnLayout {
                    Layout.fillWidth: true
                    spacing: 3 // <-- –£–º–µ–Ω—å—à–µ–Ω–æ

                    // --- –ü–û–õ–ï –î–õ–Ø –î–ê–¢–´ ---
                    RowLayout {
                        Layout.fillWidth: true
                        spacing: 3 // <-- –£–º–µ–Ω—å—à–µ–Ω–æ
                        TextField {
                            id: actualEndDateField
                            Layout.fillWidth: true
                            // Layout.preferredWidth: 80 // <-- –ú–æ–∂–Ω–æ –∑–∞–¥–∞—Ç—å —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—É—é —à–∏—Ä–∏–Ω—É, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
                            placeholderText: "–¥–¥.–ú–ú.–≥–≥–≥–≥"
                            font.pixelSize: 11 // <-- –£–º–µ–Ω—å—à–µ–Ω–æ
                            text: "" // –ë—É–¥–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –≤ resetForAdd/loadDataForEdit
                            selectByMouse: true
                            readOnly: true // –¢–æ–ª—å–∫–æ –¥–ª—è —á—Ç–µ–Ω–∏—è
                        }
                        Button {
                            id: actualEndDateCalendarButton
                            text: "üìÖ"
                            font.pixelSize: 12 // <-- –£–º–µ–Ω—å—à–µ–Ω–æ
                            Layout.preferredWidth: 30 // <-- –£–º–µ–Ω—å—à–µ–Ω–æ
                            Layout.preferredHeight: 25 // <-- –£–º–µ–Ω—å—à–µ–Ω–æ
                            onClicked: {
                                console.log("QML ActionExecutionEditorDialog: –ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ –∫–∞–ª–µ–Ω–¥–∞—Ä—è –¥–ª—è —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–æ–π –¥–∞—Ç—ã –æ–∫–æ–Ω—á–∞–Ω–∏—è.");
                                // --- –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –ö–ê–õ–ï–ù–î–ê–†–Ø ---
                                var currentDateText = actualEndDateField.text.trim();
                                var dateRegex = /^(0[1-9]|[12][0-9]|3[01])\.(0[1-9]|1[012])\.\d{4}$/;
                                if (dateRegex.test(currentDateText)) {
                                    var parts = currentDateText.split('.');
                                    var day = parseInt(parts[0], 10);
                                    var month = parseInt(parts[1], 10) - 1;
                                    var year = parseInt(parts[2], 10);
                                    var testDate = new Date(year, month, day);
                                    if (testDate.getDate() === day && testDate.getMonth() === month && testDate.getFullYear() === year) {
                                        customCalendarPicker.selectedDate = testDate;
                                        console.log("QML ActionExecutionEditorDialog: CustomCalendarPicker –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –¥–∞—Ç–æ–π –∏–∑ –ø–æ–ª—è –æ–∫–æ–Ω—á–∞–Ω–∏—è:", testDate);
                                    } else {
                                        customCalendarPicker.selectedDate = new Date();
                                        console.log("QML ActionExecutionEditorDialog: CustomCalendarPicker –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω —Ç–µ–∫—É—â–µ–π –¥–∞—Ç–æ–π (–Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –¥–∞—Ç–∞ –≤ –ø–æ–ª–µ –æ–∫–æ–Ω—á–∞–Ω–∏—è).");
                                    }
                                } else {
                                    customCalendarPicker.selectedDate = new Date();
                                    console.log("QML ActionExecutionEditorDialog: CustomCalendarPicker –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω —Ç–µ–∫—É—â–µ–π –¥–∞—Ç–æ–π (–Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤ –ø–æ–ª–µ –æ–∫–æ–Ω—á–∞–Ω–∏—è).");
                                }
                                // --- ---

                                // --- –ü–û–î–ö–õ–Æ–ß–ê–ï–ú –û–ë–†–ê–ë–û–¢–ß–ò–ö ---
                                if (typeof endTimeCalendarConnection !== 'undefined' && endTimeCalendarConnection) {
                                    endTimeCalendarConnection.destroy();
                                }
                                endTimeCalendarConnection = Qt.createQmlObject(`
                                    import QtQuick 6.5;
                                    Connections {
                                        target: customCalendarPicker;
                                        function onDateSelected(date) {
                                            console.log("QML ActionExecutionEditorDialog: CustomCalendarPicker (–û–∫–æ–Ω—á–∞–Ω–∏–µ): –î–∞—Ç–∞ –≤—ã–±—Ä–∞–Ω–∞:", date);
                                            var year = date.getFullYear();
                                            var month = String(date.getMonth() + 1).padStart(2, '0');
                                            var day = String(date.getDate()).padStart(2, '0');
                                            var formattedDate = day + "." + month + "." + year;
                                            actualEndDateField.text = formattedDate;
                                            console.log("QML ActionExecutionEditorDialog: CustomCalendarPicker (–û–∫–æ–Ω—á–∞–Ω–∏–µ): –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –Ω–æ–≤–∞—è –¥–∞—Ç–∞ –≤ –ø–æ–ª–µ –æ–∫–æ–Ω—á–∞–Ω–∏—è:", formattedDate);
                                            if (typeof endTimeCalendarConnection !== 'undefined' && endTimeCalendarConnection) {
                                                endTimeCalendarConnection.destroy();
                                                endTimeCalendarConnection = undefined;
                                            }
                                        }
                                    }
                                `, actionExecutionEditorDialog, "endTimeCalendarConnectionDynamic");
                                // --- ---

                                customCalendarPicker.open();
                            }
                        }
                    }
                    // --- ---

                    // --- –ü–û–õ–ï –î–õ–Ø –í–†–ï–ú–ï–ù–ò ---
                    RowLayout {
                        Layout.fillWidth: true
                        spacing: 3 // <-- –£–º–µ–Ω—å—à–µ–Ω–æ
                        Label { text: "–í—Ä–µ–º—è:"; font.pixelSize: 11 } // <-- –£–º–µ–Ω—å—à–µ–Ω–æ
                        ColumnLayout {
                            spacing: 1 // <-- –£–º–µ–Ω—å—à–µ–Ω–æ
                            TextField {
                                id: actualEndTimeHoursField
                                Layout.preferredWidth: 40 // <-- –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —à–∏—Ä–∏–Ω–∞
                                placeholderText: "–ß–ß"
                                font.pixelSize: 11 // <-- –£–º–µ–Ω—å—à–µ–Ω–æ
                                text: "00"
                                validator: IntValidator { bottom: 0; top: 23 }
                                selectByMouse: true
                                horizontalAlignment: TextInput.AlignHCenter
                            }
                            RowLayout {
                                spacing: 1
                                Button {
                                    text: "‚ñ≤"
                                    font.pixelSize: 6 // <-- –£–º–µ–Ω—å—à–µ–Ω–æ
                                    Layout.preferredWidth: 12 // <-- –£–º–µ–Ω—å—à–µ–Ω–æ
                                    Layout.preferredHeight: 10 // <-- –£–º–µ–Ω—å—à–µ–Ω–æ
                                    onClicked: incrementTimeComponentSimple(actualEndTimeHoursField, 1);
                                }
                                Button {
                                    text: "‚ñº"
                                    font.pixelSize: 6 // <-- –£–º–µ–Ω—å—à–µ–Ω–æ
                                    Layout.preferredWidth: 12 // <-- –£–º–µ–Ω—å—à–µ–Ω–æ
                                    Layout.preferredHeight: 10 // <-- –£–º–µ–Ω—å—à–µ–Ω–æ
                                    onClicked: incrementTimeComponentSimple(actualEndTimeHoursField, -1);
                                }
                            }
                        }
                        Text { text: ":"; font.pixelSize: 11 } // <-- –£–º–µ–Ω—å—à–µ–Ω–æ
                        ColumnLayout {
                            spacing: 1 // <-- –£–º–µ–Ω—å—à–µ–Ω–æ
                            TextField {
                                id: actualEndTimeMinutesField
                                Layout.preferredWidth: 40 // <-- –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —à–∏—Ä–∏–Ω–∞
                                placeholderText: "–ú–ú"
                                font.pixelSize: 11 // <-- –£–º–µ–Ω—å—à–µ–Ω–æ
                                text: "00"
                                validator: IntValidator { bottom: 0; top: 59 }
                                selectByMouse: true
                                horizontalAlignment: TextInput.AlignHCenter
                            }
                            RowLayout {
                                spacing: 1
                                Button {
                                    text: "‚ñ≤"
                                    font.pixelSize: 6 // <-- –£–º–µ–Ω—å—à–µ–Ω–æ
                                    Layout.preferredWidth: 12 // <-- –£–º–µ–Ω—å—à–µ–Ω–æ
                                    Layout.preferredHeight: 10 // <-- –£–º–µ–Ω—å—à–µ–Ω–æ
                                    onClicked: incrementTimeComponentSimple(actualEndTimeMinutesField, 1);
                                }
                                Button {
                                    text: "‚ñº"
                                    font.pixelSize: 6 // <-- –£–º–µ–Ω—å—à–µ–Ω–æ
                                    Layout.preferredWidth: 12 // <-- –£–º–µ–Ω—å—à–µ–Ω–æ
                                    Layout.preferredHeight: 10 // <-- –£–º–µ–Ω—å—à–µ–Ω–æ
                                    onClicked: incrementTimeComponentSimple(actualEndTimeMinutesField, -1);
                                }
                            }
                        }
                        Text { text: ":"; font.pixelSize: 11 } // <-- –£–º–µ–Ω—å—à–µ–Ω–æ
                        ColumnLayout {
                            spacing: 1 // <-- –£–º–µ–Ω—å—à–µ–Ω–æ
                            TextField {
                                id: actualEndTimeSecondsField
                                Layout.preferredWidth: 40 // <-- –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —à–∏—Ä–∏–Ω–∞
                                placeholderText: "–°–°"
                                font.pixelSize: 11 // <-- –£–º–µ–Ω—å—à–µ–Ω–æ
                                text: "00"
                                validator: IntValidator { bottom: 0; top: 59 }
                                selectByMouse: true
                                horizontalAlignment: TextInput.AlignHCenter
                            }
                            RowLayout {
                                spacing: 1
                                Button {
                                    text: "‚ñ≤"
                                    font.pixelSize: 6 // <-- –£–º–µ–Ω—å—à–µ–Ω–æ
                                    Layout.preferredWidth: 12 // <-- –£–º–µ–Ω—å—à–µ–Ω–æ
                                    Layout.preferredHeight: 10 // <-- –£–º–µ–Ω—å—à–µ–Ω–æ
                                    onClicked: incrementTimeComponentSimple(actualEndTimeSecondsField, 1);
                                }
                                Button {
                                    text: "‚ñº"
                                    font.pixelSize: 6 // <-- –£–º–µ–Ω—å—à–µ–Ω–æ
                                    Layout.preferredWidth: 12 // <-- –£–º–µ–Ω—å—à–µ–Ω–æ
                                    Layout.preferredHeight: 10 // <-- –£–º–µ–Ω—å—à–µ–Ω–æ
                                    onClicked: incrementTimeComponentSimple(actualEndTimeSecondsField, -1);
                                }
                            }
                        }
                    }
                    // --- ---
                }
                // --- ---

                // –ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ —Ç–µ–ª–µ—Ñ–æ–Ω—ã
                Label {
                    text: "–¢–µ–ª–µ—Ñ–æ–Ω—ã:"
                    Layout.alignment: Qt.AlignRight
                }
                TextField {
                    id: contactPhonesField
                    Layout.fillWidth: true
                    placeholderText: "–í–≤–µ–¥–∏—Ç–µ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ —Ç–µ–ª–µ—Ñ–æ–Ω—ã..."
                }

                // --- –ù–û–í–û–ï: FileDialog –¥–ª—è –æ—Ç—á–µ—Ç–Ω—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ ---
                FileDialog {
                    id: reportMaterialsFileDialog
                    title: "–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª—ã –æ—Ç—á–µ—Ç–Ω—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤"
                    fileMode: FileDialog.OpenFiles // –†–∞–∑—Ä–µ—à–∞–µ–º –≤—ã–±–æ—Ä –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤
                    onAccepted: {
                        console.log("QML ActionExecutionEditorDialog: FileDialog –æ—Ç—á–µ—Ç–Ω—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤: –ü—Ä–∏–Ω—è—Ç—ã —Ñ–∞–π–ª—ã:", reportMaterialsFileDialog.selectedFiles);
                        var selectedFileUrls = reportMaterialsFileDialog.selectedFiles; // –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∞—Å—Å–∏–≤ url –≤ —Ñ–æ—Ä–º–∞—Ç–µ file:///
                        if (selectedFileUrls && selectedFileUrls.length > 0) {
                            var pathsToAdd = [];
                            for (var i = 0; i < selectedFileUrls.length; i++) {
                                var fileUrl = selectedFileUrls[i];
                                if (fileUrl) {
                                    // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º URL –≤ –ª–æ–∫–∞–ª—å–Ω—ã–π –ø—É—Ç—å (—É–¥–∞–ª—è–µ–º file:///)
                                    var localPath = fileUrl.toString().replace(/^file:[\/\\]{2,3}/, ""); // –£–±–∏—Ä–∞–µ—Ç file:/// –∏–ª–∏ file:\\
                                    console.log("QML ActionExecutionEditorDialog: FileDialog –æ—Ç—á–µ—Ç–Ω—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤: –õ–æ–∫–∞–ª—å–Ω—ã–π –ø—É—Ç—å:", localPath);
                                    pathsToAdd.push(localPath);
                                }
                            }
                            if (pathsToAdd.length > 0) {
                                // –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç–∏ –≤ TextArea, —Ä–∞–∑–¥–µ–ª—è—è –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–æ–π
                                var newText = pathsToAdd.join("\n");
                                if (reportMaterialsArea.text.trim() !== "") {
                                    reportMaterialsArea.text += "\n" + newText;
                                } else {
                                    reportMaterialsArea.text = newText;
                                }
                            }
                        }
                    }
                    onRejected: {
                        console.log("QML ActionExecutionEditorDialog: FileDialog –æ—Ç—á–µ—Ç–Ω—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤: –û—Ç–º–µ–Ω–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.");
                    }
                }
                // --- ---

                Label {
                    text: "–û—Ç—á—ë—Ç–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã:"
                    Layout.alignment: Qt.AlignRight
                }
                // –û–±–µ—Ä–Ω–µ–º TextArea –∏ –∫–Ω–æ–ø–∫—É –≤ ColumnLayout –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ —Ä–∞–∑–º–µ—â–µ–Ω–∏—è
                ColumnLayout {
                    Layout.fillWidth: true
                    Layout.preferredHeight: 80 // –ó–∞–¥–∞–µ–º —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—É—é –≤—ã—Å–æ—Ç—É –¥–ª—è –≤—Å–µ–π —Å–µ–∫—Ü–∏–∏
                    spacing: 5

                    TextArea {
                        id: reportMaterialsArea
                        Layout.fillWidth: true
                        Layout.fillHeight: true // –ó–∞–ø–æ–ª–Ω—è–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—É—é –≤—ã—Å–æ—Ç—É –≤–Ω—É—Ç—Ä–∏ ColumnLayout
                        placeholderText: "–í–≤–µ–¥–∏—Ç–µ –ø—É—Ç–∏ –∫ –æ—Ç—á—ë—Ç–Ω—ã–º –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º (–ø–æ –æ–¥–Ω–æ–º—É –Ω–∞ —Å—Ç—Ä–æ–∫—É)..."
                        wrapMode: TextArea.Wrap
                        selectByMouse: true
                        // - –î–µ–ª–∞–µ–º –≥—Ä–∞–Ω–∏—Ü—É –≤–∏–¥–∏–º–æ–π -
                        background: Rectangle {
                            border.color: reportMaterialsArea.activeFocus ? "#3498db" : "#ccc"
                            border.width: 1
                            radius: 2
                            color: "white"
                        }
                        // - -
                    }
                    Button {
                        text: "–î–æ–±–∞–≤–∏—Ç—å —Ñ–∞–π–ª..."
                        Layout.alignment: Qt.AlignRight
                        onClicked: {
                            console.log("QML ActionExecutionEditorDialog: –ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ '–î–æ–±–∞–≤–∏—Ç—å —Ñ–∞–π–ª...' –¥–ª—è –æ—Ç—á–µ—Ç–Ω—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤");
                            reportMaterialsFileDialog.open();
                        }
                    }
                }
                // --- ---

                Label {
                    text: "–ö–æ–º—É –¥–æ–ª–æ–∂–µ–Ω–æ:"
                    Layout.alignment: Qt.AlignRight
                }
                TextField {
                    id: reportedToField
                    Layout.fillWidth: true
                    placeholderText: "–í–≤–µ–¥–∏—Ç–µ, –∫–æ–º—É –±—ã–ª–æ –¥–æ–ª–æ–∂–µ–Ω–æ –æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏..."
                }

                Label {
                    text: "–ü—Ä–∏–º–µ—á–∞–Ω–∏—è:"
                    Layout.alignment: Qt.AlignRight | Qt.AlignTop // –í—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ —Å–≤–µ—Ä—Ö—É
                }
                TextArea {
                    id: notesArea
                    Layout.fillWidth: true
                    Layout.preferredHeight: 60 // –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –≤—ã—Å–æ—Ç–∞ –¥–ª—è —Ç–µ–∫—Å—Ç–∞
                    placeholderText: "–í–≤–µ–¥–∏—Ç–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–∏–º–µ—á–∞–Ω–∏—è..."
                    wrapMode: TextArea.Wrap
                }
            }
        }

        // –°–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–∞—Ö
        Label {
            id: errorMessageLabel
            Layout.fillWidth: true
            color: "red"
            wrapMode: Text.WordWrap
            visible: text !== ""
        }

        // –ö–Ω–æ–ø–∫–∏
        RowLayout {
            Layout.fillWidth: true
            spacing: 10
            Item {
                Layout.fillWidth: true // –ó–∞–ø–æ–ª–Ω–∏—Ç–µ–ª—å —Å–ª–µ–≤–∞
            }
            Button {
                text: "–û—Ç–º–µ–Ω–∞"
                onClicked: {
                    console.log("QML ActionExecutionEditorDialog: –ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ –û—Ç–º–µ–Ω–∞");
                    actionExecutionEditorDialog.close();
                }
            }
            Button {
                text: "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å"
                onClicked: {
                    console.log("QML ActionExecutionEditorDialog: –ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å");
                    errorMessageLabel.text = "";

                    // --- –í–ê–õ–ò–î–ê–¶–ò–Ø –û–ü–ò–°–ê–ù–ò–Ø ---
                    if (!descriptionArea.text.trim()) {
                        errorMessageLabel.text = "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏—è.";
                        return;
                    }

                    // --- –°–ë–û–†–ö–ê –°–¢–†–û–ö–ò –î–ê–¢–´ –ò –í–†–ï–ú–ï–ù–ò –ò–ó –†–ê–ó–î–ï–õ–¨–ù–´–• –ü–û–õ–ï–ô ---
                    function buildDateTimeString(dateField, hField, mField, sField) {
                        var d = dateField.text.trim();
                        var h = hField.text.trim();
                        var m = mField.text.trim();
                        var s = sField.text.trim();
                        if (!d || !h || !m || !s) return "";
                        return d + " " + h + ":" + m + ":" + s;
                    }

                    var startDateTimeStr = buildDateTimeString(
                        actualStartDateField,
                        actualStartTimeHoursField,
                        actualStartTimeMinutesField,
                        actualStartTimeSecondsField
                    );

                    var endDateTimeStr = buildDateTimeString(
                        actualEndDateField,
                        actualEndTimeHoursField,
                        actualEndTimeMinutesField,
                        actualEndTimeSecondsField
                    );

                    // --- –í–ê–õ–ò–î–ê–¶–ò–Ø –§–û–†–ú–ê–¢–ê ---
                    var dateTimeRegex = /^(0[1-9]|[12][0-9]|3[01])\.(0[1-9]|1[012])\.\d{4} ([01]\d|2[0-3]):([0-5]\d):([0-5]\d)$/;
                    if (!startDateTimeStr || !dateTimeRegex.test(startDateTimeStr)) {
                        errorMessageLabel.text = "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞—á–∞–ª–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥–¥.–ú–ú.–≥–≥–≥–≥ —á—á:–º–º:—Å—Å.";
                        return;
                    }
                    if (!endDateTimeStr || !dateTimeRegex.test(endDateTimeStr)) {
                        errorMessageLabel.text = "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏ –æ–∫–æ–Ω—á–∞–Ω–∏—è. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥–¥.–ú–ú.–≥–≥–≥–≥ —á—á:–º–º:—Å—Å.";
                        return;
                    }

                    // --- –ü–ê–†–°–ò–ù–ì –ò –°–†–ê–í–ù–ï–ù–ò–ï ---
                    function parseDateTime(dtStr) {
                        var parts = dtStr.split(/[\s.:]+/);
                        if (parts.length !== 6) return null;
                        var day = parseInt(parts[0], 10);
                        var month = parseInt(parts[1], 10) - 1;
                        var year = parseInt(parts[2], 10);
                        var hour = parseInt(parts[3], 10);
                        var min = parseInt(parts[4], 10);
                        var sec = parseInt(parts[5], 10);
                        var date = new Date(year, month, day, hour, min, sec);
                        if (date.getDate() !== day || date.getMonth() !== month || date.getFullYear() !== year) return null;
                        return date;
                    }

                    var startObj = parseDateTime(startDateTimeStr);
                    var endObj = parseDateTime(endDateTimeStr);
                    if (!startObj || !endObj) {
                        errorMessageLabel.text = "–û—à–∏–±–∫–∞ –≤ –¥–∞—Ç–µ/–≤—Ä–µ–º–µ–Ω–∏ –Ω–∞—á–∞–ª–∞ –∏–ª–∏ –æ–∫–æ–Ω—á–∞–Ω–∏—è.";
                        return;
                    }
                    if (endObj < startObj) {
                        errorMessageLabel.text = "–í—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞—á–∞–ª–∞.";
                        return;
                    }

                    // --- –°–û–ë–ò–†–ê–ï–ú –î–ê–ù–ù–´–ï –î–õ–Ø PYTHON ---
                    // –í–ê–ñ–ù–û: –ò—Å–ø–æ–ª—å–∑—É–µ–º calculated_* –≤–º–µ—Å—Ç–æ actual_*
                    var actionExecutionData = {
                        "snapshot_description": descriptionArea.text.trim(),
                        "calculated_start_time": startDateTimeStr,   // ‚Üê –∫–ª—é—á –∏–∑–º–µ–Ω—ë–Ω!
                        "calculated_end_time": endDateTimeStr,       // ‚Üê –∫–ª—é—á –∏–∑–º–µ–Ω—ë–Ω!
                        "snapshot_contact_phones": contactPhonesField.text,
                        "snapshot_report_materials": reportMaterialsArea.text,
                        "reported_to": reportedToField.text,
                        "notes": notesArea.text
                    };

                    // --- –û–¢–ü–†–ê–í–ö–ê –í PYTHON ---
                    var result;
                    if (actionExecutionEditorDialog.isEditMode && actionExecutionEditorDialog.currentActionExecutionId > 0) {
                        console.log("QML ActionExecutionEditorDialog: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ action_execution ID", currentActionExecutionId, "–≤ Python:", JSON.stringify(actionExecutionData));
                        result = appData.updateActionExecution(currentActionExecutionId, actionExecutionData);
                    } else if (!actionExecutionEditorDialog.isEditMode && actionExecutionEditorDialog.executionId > 0) {
                        console.log("QML ActionExecutionEditorDialog: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ action_execution –¥–ª—è execution ID", executionId, "–≤ Python:", JSON.stringify(actionExecutionData));
                        result = appData.addActionExecution(executionId, actionExecutionData);
                    } else {
                        errorMessageLabel.text = "–û—à–∏–±–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–∏–∞–ª–æ–≥–∞.";
                        console.error("QML ActionExecutionEditorDialog: –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è.");
                        return;
                    }

                    if (result === true || (typeof result === 'number' && result > 0)) {
                        console.log("QML ActionExecutionEditorDialog: –£—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ.");
                        actionExecutionEditorDialog.actionExecutionSaved();
                        actionExecutionEditorDialog.close();
                    } else {
                        var errorMsg = typeof result === 'string' ? result : "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞";
                        errorMessageLabel.text = "–û—à–∏–±–∫–∞: " + errorMsg;
                        console.warn("QML ActionExecutionEditorDialog: –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏:", errorMsg);
                    }
                }
            }
        }
    }

    // --- –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏/—Å–±—Ä–æ—Å–∞ –¥–∞–Ω–Ω—ã—Ö ---
    /**
     * –°–±—Ä–∞—Å—ã–≤–∞–µ—Ç –¥–∏–∞–ª–æ–≥ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ action_execution
     */
    function resetForAdd() {
        console.log("QML ActionExecutionEditorDialog: –°–±—Ä–æ—Å –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è");
        isEditMode = false;
        currentActionExecutionId = -1;
        descriptionArea.text = "";
        contactPhonesField.text = "";
        reportMaterialsArea.text = "";
        reportedToField.text = "";
        notesArea.text = "";
        errorMessageLabel.text = "";
        dialogTitleLabel.text = "–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ";

        // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–µ–∫—É—â–µ–π –¥–∞—Ç—ã/–≤—Ä–µ–º–µ–Ω–∏
        var now = new Date();
        var d = String(now.getDate()).padStart(2, '0');
        var m = String(now.getMonth() + 1).padStart(2, '0');
        var y = now.getFullYear();
        var h = String(now.getHours()).padStart(2, '0');
        var min = String(now.getMinutes()).padStart(2, '0');
        var s = String(now.getSeconds()).padStart(2, '0');

        actualStartDateField.text = `${d}.${m}.${y}`;
        actualStartTimeHoursField.text = h;
        actualStartTimeMinutesField.text = min;
        actualStartTimeSecondsField.text = s;

        actualEndDateField.text = `${d}.${m}.${y}`;
        actualEndTimeHoursField.text = h;
        actualEndTimeMinutesField.text = min;
        actualEndTimeSecondsField.text = s;
    }

    /**
    * –ó–∞–≥—Ä—É–∂–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ action_execution –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    */
    function loadDataForEdit(actionExecutionData) {
        console.log("QML ActionExecutionEditorDialog: –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö:", JSON.stringify(actionExecutionData));
        if (!actionExecutionData || typeof actionExecutionData !== 'object') {
            errorMessageLabel.text = "–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö.";
            return;
        }

        isEditMode = true;
        currentActionExecutionId = actionExecutionData.id || -1;
        descriptionArea.text = actionExecutionData.snapshot_description || "";
        contactPhonesField.text = actionExecutionData.snapshot_contact_phones || "";
        reportMaterialsArea.text = actionExecutionData.snapshot_report_materials || "";
        reportedToField.text = actionExecutionData.reported_to || "";
        notesArea.text = actionExecutionData.notes || "";
        errorMessageLabel.text = "";
        dialogTitleLabel.text = "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ";

        // –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ä–∞–∑–±–æ—Ä–∞ –¥–∞—Ç—ã
        function setDateTimeFields(dateTimeStr, dateField, hField, mField, sField) {
            if (!dateTimeStr) {
                dateField.text = "";
                hField.text = "00";
                mField.text = "00";
                sField.text = "00";
                return;
            }

            var match1 = dateTimeStr.match(/^(\d{2})\.(\d{2})\.(\d{4})\s+(\d{2}):(\d{2}):(\d{2})$/);
            var match2 = dateTimeStr.match(/^(\d{4})-(\d{2})-(\d{2})T(\d{2}):(\d{2}):(\d{2})/);

            if (match1) {
                dateField.text = match1[1] + "." + match1[2] + "." + match1[3];
                hField.text = match1[4];
                mField.text = match1[5];
                sField.text = match1[6];
            } else if (match2) {
                dateField.text = match2[3] + "." + match2[2] + "." + match2[1];
                hField.text = match2[4];
                mField.text = match2[5];
                sField.text = match2[6];
            } else {
                dateField.text = "";
                hField.text = "00";
                mField.text = "00";
                sField.text = "00";
            }
        }

        // –ó–∞–≥—Ä—É–∂–∞–µ–º calculated_* –∫–∞–∫ —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –≤—Ä–µ–º–µ–Ω–∞
        setDateTimeFields(
            actionExecutionData.calculated_start_time,
            actualStartDateField,
            actualStartTimeHoursField,
            actualStartTimeMinutesField,
            actualStartTimeSecondsField
        );

        setDateTimeFields(
            actionExecutionData.calculated_end_time,
            actualEndDateField,
            actualEndTimeHoursField,
            actualEndTimeMinutesField,
            actualEndTimeSecondsField
        );
    }

    function incrementTimeComponentSimple(textField, delta) {
        console.log("QML ActionExecutionEditorDialog: incrementTimeComponentSimple called with", textField, delta);
        var text = textField.text || "00";
        console.log("QML ActionExecutionEditorDialog: Current text:", text);

        var value = parseInt(text, 10) || 0;
        console.log("QML ActionExecutionEditorDialog: Parsed value:", value);

        value += delta;

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ (—á–∞—Å—ã/–º–∏–Ω—É—Ç—ã/—Å–µ–∫—É–Ω–¥—ã)
        // –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ ID —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—è —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–∏–ø (hours, minutes, seconds)
        var fieldName = textField.objectName || ""; // –ú–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å objectName –¥–ª—è –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
        if (textField === actualStartTimeHoursField || textField === actualEndTimeHoursField) {
            // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–∏–∞–ø–∞–∑–æ–Ω 0-23 –¥–ª—è —á–∞—Å–æ–≤
            value = (value + 24) % 24; // –û–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –ø–µ—Ä–µ–ø–æ–ª–Ω–µ–Ω–∏–µ
        } else if (textField === actualStartTimeMinutesField || textField === actualEndTimeMinutesField ||
                   textField === actualStartTimeSecondsField || textField === actualEndTimeSecondsField) {
            // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–∏–∞–ø–∞–∑–æ–Ω 0-59 –¥–ª—è –º–∏–Ω—É—Ç –∏ —Å–µ–∫—É–Ω–¥
            value = (value + 60) % 60; // –û–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –ø–µ—Ä–µ–ø–æ–ª–Ω–µ–Ω–∏–µ
        } else {
            // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é, –µ—Å–ª–∏ –Ω–µ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω —Ç–∏–ø, –ø—Ä–æ—Å—Ç–æ –æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º 0-59
            value = Math.max(0, Math.min(59, value));
        }

        // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –æ–±—Ä–∞—Ç–Ω–æ –≤ —Å—Ç—Ä–æ–∫—É HH, MM, SS
        var newText = value.toString().padStart(2, '0');

        console.log("QML ActionExecutionEditorDialog: New text:", newText);
        textField.text = newText;
    }

    onOpened: {
        console.log("QML ActionExecutionEditorDialog: –î–∏–∞–ª–æ–≥ –æ—Ç–∫—Ä—ã—Ç. –†–µ–∂–∏–º:", isEditMode ? "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ" : "–î–æ–±–∞–≤–ª–µ–Ω–∏–µ");
        errorMessageLabel.text = "";
        // –§–æ–∫—É—Å –Ω–∞ –ø–µ—Ä–≤–æ–µ –ø–æ–ª–µ
        if (isEditMode) {
            descriptionArea.forceActiveFocus();
        } else {
            // –ü—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ç–æ–∂–µ —Ñ–æ–∫—É—Å –Ω–∞ –æ–ø–∏—Å–∞–Ω–∏–µ
            descriptionArea.forceActiveFocus();
        }
    }
    // --- ---
        // –î–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ–Ω–µ—Ü ActionExecutionEditorDialog.qml
    CustomCalendarPicker {
        id: customCalendarPicker
        // visible: false // –û–±—ã—á–Ω–æ Popup —Å–∞–º —É–ø—Ä–∞–≤–ª—è–µ—Ç –≤–∏–¥–∏–º–æ—Å—Ç—å—é, –Ω–æ –º–æ–∂–Ω–æ —è–≤–Ω–æ —Å–∫—Ä—ã—Ç—å
        // anchors.fill: parent // –û–±—ã—á–Ω–æ –Ω–µ –Ω—É–∂–Ω–æ –¥–ª—è Popup/Dialog
        // z: -1 // –ú–æ–∂–Ω–æ –ø–æ–º–µ—Å—Ç–∏—Ç—å –ø–æ–∑–∞–¥–∏, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ, –Ω–æ –æ–±—ã—á–Ω–æ Popup –≤—ã—à–µ
    }
    // --- ---
}

